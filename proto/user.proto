syntax = "proto3";

package user;


service UserService{
    
    rpc CreateUser(CreateUserRequest) returns (User){}
    rpc Login(LoginRequest) returns (LoginResponse){}
    rpc UpdateUser(UpdateUserRequest) returns (User){}
    rpc SearchUser(SearchUserRequest) returns (User){}
    rpc AssignStoreToUser(AssignStoreToUserRequest) returns (User){}
    rpc SearchUserByStore(SearchUserByStoreRequest) returns (UserListResponse){}
}

message User{
    int32 id = 1;
    string username = 2;
    string password = 3;  // Note: you may want to use a more secure approach for storing passwords
    string first_name = 4;
    string last_name = 5;
    bool enabled = 6;
    bool is_central = 7;
    // Relación con Store
    int32 store_id = 8;
}

message UpdateUserRequest{
    string username = 1;
    string password = 2;
    string first_name = 3;
    string last_name = 4;
    bool enabled = 5;
    int32 store_id = 6; 
}

message SearchUserRequest{
    string username = 1; 
}

message CreateUserRequest{
    string username = 1;
    string password = 2;
    string first_name = 3;
    string last_name = 4;
    bool enabled = 5;
    bool is_central = 6;
    // relacion con store
    int32 store_id = 7;
}

message AssignStoreToUserRequest{
    int32 user_id = 1;
    string store_code = 2;
}

message LoginRequest{
    string username = 1;
    string password = 2;
}

message LoginResponse{
    string username = 1; // Note: you may want to use a more secure approach for storing passwords
    string first_name = 2;
    string last_name = 3;
    bool enabled = 4;
    bool is_central = 5;
    // Relación con Store
    int32 store_id = 6;
}

message SearchUserByStoreRequest{
    string store_code = 1;
}

message UserListResponse{
    repeated User users = 1; 
}